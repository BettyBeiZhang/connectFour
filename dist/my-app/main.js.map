{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/game/game.component.css","webpack:///./src/app/components/game/game.component.html","webpack:///./src/app/components/game/game.component.ts","webpack:///./src/app/utils/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-game></app-game>\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './components/game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    CommonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/* style for GameComponent component template */\\r\\n.container {\\r\\n    background-color: #f57921;\\r\\n    width: 350px;\\r\\n    height: 700px;\\r\\n    text-align: center;\\r\\n    margin: 0 auto;\\r\\n}\\r\\nh1 {\\r\\n  font-family: 'Galada', cursive;\\r\\n}\\r\\nh2 {\\r\\n    margin-top: 0px;\\r\\n}\\r\\nbutton {\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  border-radius: 50%;\\r\\n  border: 0;\\r\\n  background: #bbb;\\r\\n}\\r\\n.play-again {\\r\\n  display: none;\\r\\n  margin-bottom: 10px;\\r\\n  height: 40px;\\r\\n  line-height: 40px;\\r\\n  width: 50%;\\r\\n  background: #398bd4;\\r\\n  color: white;\\r\\n  text-decoration: none;\\r\\n  font-family: helvetica;\\r\\n}\\r\\n\"","module.exports = \"<!-- Main connect four game component html template -->\\n<div class=\\\"container vertical center\\\">\\n    <h1>Connect Four</h1>\\n    <h2>{{config.playerPrefix}}<span>{{currentPlayer}}</span></h2>\\n    <a href=\\\"#\\\" *ngIf=\\\"showButton\\\" class=\\\"play-again\\\" [ngStyle]=\\\"showPlayAgain\\\" (click)=\\\"playAgainClick()\\\">Play Again</a>\\n    <div>\\n        <table>\\n            <tbody>\\n                <tr *ngFor=\\\"let button of board; index as i\\\">\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"0\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(0,i)\\\" (click)=\\\"btnClick(0, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"1\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(1,i)\\\" (click)=\\\"btnClick(1, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"2\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(2,i)\\\" (click)=\\\"btnClick(2, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"3\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(3,i)\\\" (click)=\\\"btnClick(3, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"4\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(4,i)\\\" (click)=\\\"btnClick(4, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"5\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(5,i)\\\" (click)=\\\"btnClick(5, i)\\\"></button></td>\\n                    <td><button #button type=\\\"button\\\" xPos=\\\"6\\\" [attr.yPos]=\\\"i\\\" [ngStyle]=\\\"getColor(6,i)\\\" (click)=\\\"btnClick(6, i)\\\"></button></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {board, config, currentPlayer} from '../../utils/utils';\n\n/**\n * App-game Component\n * @export\n * @class GameComponent\n * @implements {onInit}\n */\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit  {\n  config;\n  board;\n  currentPlayer;\n  showButton: Boolean = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.board = board;\n    this.currentPlayer = currentPlayer;\n    this.config = config;\n  }\n\n  // Handle for update the board cell by color\n  addDiscToBoard(color, xpos, ypos) {\n    board[ypos][xpos] = color;\n  }\n\n  // Ensure the position will be filling in color isn't taken\n  positionIsTaken(xpos, ypos) {\n    const value = board[ypos][xpos];\n\n    return value === 0 ? false : true;\n  }\n\n  // Handle for change player on button click\n  changePlayer() {\n    if (this.currentPlayer === 'yellow') {\n      this.currentPlayer = 'red';\n    } else {\n      this.currentPlayer = 'yellow';\n    }\n  }\n\n  // Function that handle drop to the bottom of the column, start at the bottom\n  dropToBottom(x_pos, y_pos) {\n    for (let y = 5; y > y_pos; y--) {\n      if (board[y][x_pos] === 0) {\n        return y;\n      }\n    }\n    return y_pos;\n  }\n\n  // when all pieces on board are filled\n  gameIsDraw() {\n    for (let y = 0; y <= 5; y++) {\n      for (let x = 0; x <= 6; x++) {\n        if (board[y][x] === 0) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  // ngStyle binded function to change/fill in the color in the cell\n  getColor(xpos, ypos) {\n    if (board[ypos][xpos] === 0) {\n      return {\n        'background-color': '#bbb',\n      };\n    } else {\n      return {\n        'background-color': board[ypos][xpos],\n      };\n    }\n  }\n\n  // Define horizontal win boolean \n  horizontalWin() {\n    let currentValue = null,\n        previousValue = 0,\n        tally = 0;\n  \n      // Scan each row in series, tallying the length of each series. If a series\n      // ever reaches four, return true for a win.\n      for (let y = 0; y <= 5; y++) {\n          for (let x = 0; x <= 6; x++) {\n              currentValue = board[y][x];\n              if (currentValue === previousValue && currentValue !== 0) {\n                  tally += 1;\n              } else {\n                  // Reset the tally if you find a gap.\n                  tally = 0;\n              }\n              if (tally === config.countToWin - 1) {\n                  return true;\n              }\n              previousValue = currentValue;\n          }\n\n          // After each row, reset the tally and previous value.\n          tally = 0;\n          previousValue = 0;\n      }\n      return false;\n  }\n\n  // Define vetical win boolean \n  verticalWin() {\n    let currentValue = null,\n        previousValue = 0,\n        tally = 0;\n\n    // Scan each column in series, tallying the length of each series. If a\n    // series ever reaches four, return true for a win.\n    for (let x = 0; x <= 6; x++) {\n        for (let y = 0; y <= 5; y++) {\n            currentValue = board[y][x];\n            if (currentValue === previousValue && currentValue !== 0) {\n                tally += 1;\n            } else {\n                // Reset the tally if you find a gap.\n                tally = 0;\n            }\n            if (tally === config.countToWin - 1) {\n                return true;\n            }\n            previousValue = currentValue;\n        }\n\n        // After each column, reset the tally and previous value.\n        tally = 0;\n        previousValue = 0;\n    }\n\n    // No vertical win was found.\n    return false;\n}\n\n// Define diagonal win boolean \n diagonalWin() {\n    let x = null,\n        y = null,\n        xtemp = null,\n        ytemp = null,\n        currentValue = null,\n        previousValue = 0,\n        tally = 0;\n\n    // Test for down-right diagonals across the top.\n    for (x = 0; x <= 6; x++) {\n        xtemp = x;\n        ytemp = 0;\n\n        while (xtemp <= 6 && ytemp <= 5) {\n            currentValue = board[ytemp][xtemp];\n            if (currentValue === previousValue && currentValue !== 0) {\n                tally += 1;\n            } else {\n                // Reset the tally if you find a gap.\n                tally = 0;\n            }\n            if (tally === config.countToWin - 1) {\n                return true;\n            }\n            previousValue = currentValue;\n\n            // Shift down-right one diagonal index.\n            xtemp++;\n            ytemp++;\n        }\n        // Reset the tally and previous value when changing diagonals.\n        tally = 0;\n        previousValue = 0;\n    }\n\n    // Test for down-left diagonals across the top.\n    for (x = 0; x <= 6; x++) {\n        xtemp = x;\n        ytemp = 0;\n\n        while (0 <= xtemp && ytemp <= 5) {\n            currentValue = board[ytemp][xtemp];\n            if (currentValue === previousValue && currentValue !== 0) {\n                tally += 1;\n            } else {\n                tally = 0;\n            }\n            if (tally === config.countToWin - 1) {\n                return true;\n            }\n            previousValue = currentValue;\n\n            xtemp--;\n            ytemp++;\n        }\n        tally = 0;\n        previousValue = 0;\n    }\n\n    for (y = 0; y <= 5; y++) {\n        xtemp = 0;\n        ytemp = y;\n\n        while (xtemp <= 6 && ytemp <= 5) {\n            currentValue = board[ytemp][xtemp];\n            if (currentValue === previousValue && currentValue !== 0) {\n                tally += 1;\n            } else {\n                tally = 0;\n            }\n            if (tally === config.countToWin - 1) {\n                return true;\n            }\n            previousValue = currentValue;\n\n            xtemp++;\n            ytemp++;\n        }\n        tally = 0;\n        previousValue = 0;\n    }\n\n    for (y = 0; y <= 5; y++) {\n        xtemp = 6;\n        ytemp = y;\n\n        while (0 <= xtemp && ytemp <= 5) {\n            currentValue = board[ytemp][xtemp];\n            if (currentValue === previousValue && currentValue !== 0) {\n                tally += 1;\n            } else {\n                tally = 0;\n            }\n            if (tally === config.countToWin - 1) {\n                return true;\n            }\n            previousValue = currentValue;\n\n            xtemp--;\n            ytemp++;\n        }\n        tally = 0;\n        previousValue = 0;\n    }\n\n    return false;\n}\n\n\nget showPlayAgain() {\n    return {\n        'display': 'inline-block',\n    };\n}\n\n  // Function will tragger when user's click event\n  btnClick(xpos, ypos) {\n    const y_pos = this.dropToBottom(xpos, ypos);\n\n    if (this.positionIsTaken(xpos, y_pos)) {\n      alert(this.config.takenMsg);\n      return;\n    }\n    this.addDiscToBoard(this.currentPlayer, xpos, y_pos);\n    this.changePlayer();\n\n    if ( this.horizontalWin() || this.verticalWin() || this.diagonalWin() ) {\n        alert(this.config.winPrefix + board[y_pos][xpos]);\n        this.showButton = true;\n        return;\n    } else if (this.gameIsDraw()) {\n        alert(this.config.drawMsg);\n        return;\n    }\n  }\n\n  // Handle play again button click \n  playAgainClick() {\n    location.reload();\n  }\n}\n","// Create variables for use in the game\r\nexport const config = {\r\n  startingPlayer: 'yellow',\r\n  playerPrefix: 'Current Player is: ',\r\n  winPrefix: 'The winner is: ',\r\n  countToWin: 4,\r\n  takenMsg: 'This position is already taken. Please make another choice.',\r\n  drawMsg: 'This game is a draw.',\r\n};\r\n\r\n// Define the empty board as a two-dimensional array, full of zeros\r\nexport const board = [\r\n  [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]\r\n];\r\n\r\n// define the startingPlayer yellow as current player 1, current play will change\r\nexport const currentPlayer = config.startingPlayer;\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}